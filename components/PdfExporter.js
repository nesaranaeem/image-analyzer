// components/PdfExporter.js
import jsPDF from "jspdf";
import autoTable from "jspdf-autotable";

const PdfExporter = ({
  exifEntries,
  fileDetails,
  colors,
  siteName,
  imageSrc,
  locationData,
}) => {
  const exportToPDF = () => {
    const pdf = new jsPDF();
    const pageWidth = pdf.internal.pageSize.getWidth();

    // Title
    pdf.setFontSize(18);
    pdf.text("Image Details Report", pageWidth / 2, 15, { align: "center" });

    // Add Image
    let imgWidth = 0;
    let imgHeight = 0;

    if (imageSrc) {
      const imgProps = pdf.getImageProperties(imageSrc);
      imgWidth = 100;
      imgHeight = (imgProps.height * imgWidth) / imgProps.width;
      pdf.addImage(
        imageSrc,
        "JPEG",
        (pageWidth - imgWidth) / 2,
        25,
        imgWidth,
        imgHeight
      );
    }

    let currentY = imageSrc ? 25 + imgHeight + 10 : 30;

    // File Details
    pdf.setFontSize(12);
    pdf.text(`File Name: ${fileDetails?.name || "N/A"}`, 10, currentY);
    currentY += 10;
    pdf.text(`File Size: ${fileDetails?.sizeFormatted || "N/A"}`, 10, currentY);
    currentY += 10;
    pdf.text(`Format: ${fileDetails?.type || "N/A"}`, 10, currentY);
    currentY += 10;

    // Location Name
    if (locationData?.locationName) {
      pdf.text(`Location Name: ${locationData.locationName}`, 10, currentY);
      currentY += 10;
    }

    // Main Colors
    if (colors && colors.length > 0) {
      pdf.text("Main Colors:", 10, currentY);
      currentY += 5;
      colors.forEach((color, index) => {
        pdf.setFillColor(color[0], color[1], color[2]);
        pdf.rect(10 + index * 12, currentY, 10, 10, "F");
      });
      currentY += 20;
    } else {
      currentY += 10;
    }

    // Function to format keys by inserting spaces before capital letters
    const formatKey = (key) => {
      return key.replace(/([a-z])([A-Z])/g, "$1 $2");
    };

    // EXIF Data Table
    if (exifEntries.length > 0) {
      const exifDataArray = exifEntries.map((entry) => [
        formatKey(entry.key),
        entry.value,
      ]);
      pdf.autoTable({
        head: [["Attribute", "Value"]],
        body: exifDataArray,
        startY: currentY,
        theme: "grid",
        styles: { fontSize: 10 },
        headStyles: { fillColor: [41, 128, 185] },
        columnStyles: {
          0: { cellWidth: 60 },
          1: { cellWidth: 120 },
        },
      });
    }

    // Footer
    pdf.setFontSize(10);
    pdf.text(
      `Report generated by: ${siteName}, app developed by: Nesar Ahmed Naeem`,
      pageWidth / 2,
      pdf.internal.pageSize.getHeight() - 10,
      { align: "center" }
    );

    // Save PDF
    pdf.save(`Report_${fileDetails?.name || "Image"}.pdf`);
  };

  return (
    <div className="text-right mb-4">
      <button
        onClick={exportToPDF}
        className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600"
      >
        Export Report as PDF
      </button>
    </div>
  );
};

export default PdfExporter;
